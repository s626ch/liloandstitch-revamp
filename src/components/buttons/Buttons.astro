---
import Button from "./Button.astro"

/*
    This right here is what you call pure genius.

    - import all in images
    - map to `[ route, module().default ]`
    - group into an object where the key is what's inbetween `./images/` and `.*` and the value is an array containing the `[ route, module().default ]` arrays
    - convert `module().default` into an `Object.entries()` array
    - flatMap all of the `Object.entries(module().default)`s along with the basename
    - combine all that into one object
    
    Basically: import everything in ./images,
    and combine everything with the same basename into one object
*/

let groupBy = Object.groupBy || function<K extends PropertyKey, T>(items: Array<T>, keySelector: (item: T, index: number) => K): Partial<Record<K, T[]>> {
    let newObj = {} as Record<K, T[]>

    items.forEach((v, x) => {
        let key = keySelector(v,x)
        newObj[key] = [...(newObj[key] || [] as T[]), v]
    })

    return newObj
}
export interface Metadata {
    alt?: string,
    url?: string,
    order?: number,
    basename: string
}

export type ImportedImage = (ImageMetadata & Metadata) | ({directUrl: string} & Metadata)

const images =
    (Object.entries(
        groupBy(
            (await Promise.all(
                Object.entries(import.meta.glob("./images/*"))
                    .map(async ([key, prom]) => [key, (await prom() as any)?.default])
            )),
            ([name, obj]) => name.match(/\.\/images\/(.*)\..*/)[1]
        )
    ).map(([k, arrays]) => 
        Object.fromEntries([
            ...arrays.flatMap(array => Object.entries(array[1])), 
            ["basename", k]
        ])
    ) as unknown as ImportedImage[])
    .sort((a,b) => (a.order??100)-(b.order??100))

export interface Props {
    filter: Parameters<typeof images.filter>[0]
}

const { filter = () => true } = Astro.props

---

<style lang="scss">
    div {
        display: flex;
        flex-direction: column;
        gap: 10px;
        flex-wrap: wrap;
        justify-content: center;
        flex-direction: row
    }
</style>

<section class="buttons">
    <div>
        {
            images.filter(filter).map((image) => <Button image={image} />)
        }
    </div>
</section>